{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/App.vue?9974","webpack:///./src/components/flowchart/index.css","webpack:///./src/components/flowchart/index.css?cbbd","webpack:///./src/assets/modal.css","webpack:///./src/components/flowchart/index.css?4774","webpack:///./src/views/App.vue?90db","webpack:///./src/components/ConnectionDialog.vue?f3cc","webpack:///src/components/ConnectionDialog.vue","webpack:///./src/components/ConnectionDialog.vue?dc70","webpack:///./src/components/ConnectionDialog.vue","webpack:///./src/components/NodeDialog.vue?80f6","webpack:///src/components/NodeDialog.vue","webpack:///./src/components/NodeDialog.vue?d6d1","webpack:///./src/components/NodeDialog.vue","webpack:///./src/components/flowchart/Flowchart.vue?a95d","webpack:///./src/utils/math.js","webpack:///./src/utils/svg.js","webpack:///./src/components/flowchart/render.js","webpack:///src/components/flowchart/Flowchart.vue","webpack:///./src/components/flowchart/Flowchart.vue?00ea","webpack:///./src/components/flowchart/Flowchart.vue","webpack:///src/views/App.vue","webpack:///./src/views/App.vue?509d","webpack:///./src/views/App.vue","webpack:///./src/main.js","webpack:///./src/assets/modal.css?379c","webpack:///./src/views/App.vue?bd2e","webpack:///./src/views/App.vue?f4d5"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","content","locals","add","default","sourceMap","shadowMode","_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_index_css_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_index_css_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_3e3835ac_scoped_true_render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","id","on","click","$event","$refs","chart","Date","x","y","type","approvers","remove","editCurrent","save","ref","nodes","connections","width","height","readonly","render","editnode","handleEditNode","dblclick","handleDblClick","editconnection","handleEditConnection","handleChartSave","select","handleSelect","selectconnection","handleSelectConnection","visible","nodeDialogVisible","node","nodeForm","target","update:visible","update:node","$set","connectionDialogVisible","connection","connectionForm","operation","update:connection","staticRenderFns","ConnectionDialogvue_type_template_id_46e2c904_render","staticStyle","_m","for","directives","rawName","expression","domProps","input","composing","change","$$selectedVal","Array","filter","options","selected","map","val","_value","multiple","_l","item","_s","handleClickCancelSaveConnection","handleClickSaveConnection","_e","ConnectionDialogvue_type_template_id_46e2c904_staticRenderFns","ConnectionDialogvue_type_script_lang_js_","props","Boolean","sourceId","sourcePosition","destinationId","destinationPosition","methods","_handleClickSaveConnection","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","$emit","assign","stop","arguments","_handleClickCancelSaveConnection","_callee2","_context2","watch","immediate","handler","components_ConnectionDialogvue_type_script_lang_js_","component","componentNormalizer","ConnectionDialog","NodeDialogvue_type_template_id_31bc5405_render","approver","handleChangeApprover","handleClickCancelSaveNode","handleClickSaveNode","NodeDialogvue_type_template_id_31bc5405_staticRenderFns","NodeDialogvue_type_script_lang_js_","e","parseInt","components_NodeDialogvue_type_script_lang_js_","NodeDialog_component","NodeDialog","Flowchartvue_type_template_id_791e6c00_render","style","isNaN","cursor","tabindex","mousemove","handleChartMouseMove","mouseup","handleChartMouseUp","handleChartDblClick","mousewheel","handleChartMouseWheel","mousedown","handleChartMouseDown","cursorToChartOffset","Flowchartvue_type_template_id_791e6c00_staticRenderFns","distanceOfPointToLine","beginX","beginY","endX","endY","ptX","ptY","k","b","Math","abs","sqrt","between","num1","num2","num","approximatelyEquals","getEdgeOfPoints","points","minX","reduce","point","Infinity","maxX","minY","maxY","start","end","pointRectangleIntersection","roundTo20","number","lineTo","g","x1","y1","x2","y2","lineWidth","strokeStyle","dash","sta","lineGenerator","d3","path","append","attr","join","line2","startPosition","endPosition","markered","second","centerX","centerY","addVerticalCenterLine","third","forth","penult","addHorizontalCenterLine","addHorizontalTopLine","addHorizontalBottomLine","addVerticalRightLine","addVerticalLeftLine","addSecondXPenultY","addPenultXSecondY","direction","getDirection","indexOf","lines","paths","source","destination","sourceX","sourceY","destinationX","destinationY","finish","arrowTo","replace","isSelected","borderColor","text","each","self","textLength","getComputedTextLength","body","classed","bodyTextY","concat","Flowchartvue_type_script_lang_js_","position","String","Number","Function","flowchart_render","internalNodes","internalConnections","connectingInfo","selectionInfo","currentNodes","currentConnections","clickedOnce","pathClickedOnce","editNode","editConnection","event","stopPropagation","preventDefault","ctrlKey","svg","document","getElementById","zoom","parseFloat","deltaY","_handleChartMouseUp","tempId","conn","hoveredConnector","_handleChartMouseMove","boundingClientRect","actualX","actualY","sourceOffset","currentTarget","getBoundingClientRect","pageX","left","scrollX","trunc","pageY","top","scrollY","renderConnections","getNodeConnectorOffset","_x","offsetX","offsetY","getConnectorPosition","halfWidth","halfHeight","bottom","right","renderSelection","that","edge","rect","forEach","every","line","Promise","resolve","$nextTick","colors","pass","reject","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","timer","setTimeout","clearTimeout","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","renderNodes","renderNode","nodeId","connectorPosition","element","insert","guideLineTo","color","drag","isNotCurrentNode","_callee3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","currentNode","expectX","expectY","_context3","abrupt","dx","dy","t0","getCurrentNodesEdge","round","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","connectors","_loop","positionElement","connector","toConsumableArray","_remove","_callee4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context4","removeConnection","removeNode","t1","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","index","moveCurrentNode","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","init","newNode","JSON","parse","stringify","mounted","onkeydown","keyCode","_that$currentNodes","_that$currentConnecti","activeElement","created","computed","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","prop","entry","hypot","hoveredConnection","_this","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop2","distance","v","_iterator10","_ret","esm_typeof","deep","flowchart_Flowchartvue_type_script_lang_js_","Flowchart_component","Flowchart","Appvue_type_script_lang_js_","components","_mounted","_handleChartSave","_x2","_body","views_Appvue_type_script_lang_js_","App_component","App","Vue","config","productionTip","el","_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_3e3835ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_3e3835ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.9587eef0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/flowchart-vue/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3e3835ac&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5153b1b9\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#svg{background-size:20px 20px,20px 20px,10px 10px,10px 10px;background-image:linear-gradient(90deg,#dfdfdf 1px,transparent 0),linear-gradient(180deg,#dfdfdf 1px,transparent 0),linear-gradient(90deg,#f1f1f1 1px,transparent 0),linear-gradient(180deg,#f1f1f1 1px,transparent 0);background-position:left -1px top -1px,left -1px top -1px,left -1px top -1px,left -1px top -1px;height:100%;width:100%}#chart{position:relative;width:800px;height:600px;border:1px solid #dfdfdf}#position{position:absolute;right:4px}.unselectable{moz-user-select:-moz-none;-moz-user-select:none;-o-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.connector{cursor:crosshair;opacity:0}.connector.active{opacity:1;fill:#fff;stroke:#bbb;stroke-width:1px}.connector:hover{stroke:red}#svg .selection{stroke:#add8e6;fill:#add8e6;fill-opacity:.8;display:none}#svg .selection.active{display:block}\", \"\"]);\n\n// exports\n","import mod from \"-!../../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!./index.css?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!./index.css?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".modal{border:1px solid #d3d3d3;box-shadow:2px 2px 1px #d3d3d3;background-color:#fff;position:absolute;top:100px;left:0;right:0;margin-left:auto;margin-right:auto}.form-control{display:block;width:100%;height:30px;margin-bottom:10px}.footer{padding:10px;text-align:right}.footer>button{margin-left:10px}.body,.header{padding:10px}.header{border-bottom:1px solid #d3d3d3}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!./index.css?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3d8912d2\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Flowchart Vue\")]),_c('h5',{staticClass:\"subtitle\"},[_vm._v(\"\\n    Flowchart & Flowchart designer component for Vue.js.\\n  \")]),_c('div',{attrs:{\"id\":\"toolbar\"}},[_c('button',{on:{\"click\":function($event){_vm.$refs.chart.add({\n          id: +new Date(),\n          x: 10,\n          y: 10,\n          name: 'New',\n          type: 'operation',\n          approvers: [],\n        })}}},[_vm._v(\"\\n      Add(Double-click canvas)\\n    \")]),_c('button',{on:{\"click\":function($event){return _vm.$refs.chart.remove()}}},[_vm._v(\"Delete(Del)\")]),_c('button',{on:{\"click\":function($event){return _vm.$refs.chart.editCurrent()}}},[_vm._v(\"\\n      Edit(Double-click node)\\n    \")]),_c('button',{on:{\"click\":function($event){return _vm.$refs.chart.save()}}},[_vm._v(\"Save\")])]),_c('flowchart',{ref:\"chart\",attrs:{\"nodes\":_vm.nodes,\"connections\":_vm.connections,\"width\":'100%',\"height\":500,\"readonly\":false,\"render\":_vm.render},on:{\"editnode\":_vm.handleEditNode,\"dblclick\":_vm.handleDblClick,\"editconnection\":_vm.handleEditConnection,\"save\":_vm.handleChartSave,\"select\":_vm.handleSelect,\"selectconnection\":_vm.handleSelectConnection}}),_c('node-dialog',{attrs:{\"visible\":_vm.nodeDialogVisible,\"node\":_vm.nodeForm.target},on:{\"update:visible\":function($event){_vm.nodeDialogVisible=$event},\"update:node\":function($event){return _vm.$set(_vm.nodeForm, \"target\", $event)}}}),_c('connection-dialog',{attrs:{\"visible\":_vm.connectionDialogVisible,\"connection\":_vm.connectionForm.target,\"operation\":_vm.connectionForm.operation},on:{\"update:visible\":function($event){_vm.connectionDialogVisible=$event},\"update:connection\":function($event){return _vm.$set(_vm.connectionForm, \"target\", $event)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.visible)?_c('div',{staticClass:\"modal\",staticStyle:{\"width\":\"320px\"}},[_vm._m(0),_c('div',{staticClass:\"body\"},[_c('label',{attrs:{\"for\":\"name\"}},[_vm._v(\"Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.connectionForm.name),expression:\"connectionForm.name\"}],staticClass:\"form-control\",attrs:{\"id\":\"name\"},domProps:{\"value\":(_vm.connectionForm.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.connectionForm, \"name\", $event.target.value)}}}),_c('label',{attrs:{\"for\":\"type\"}},[_vm._v(\"Type\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.connectionForm.type),expression:\"connectionForm.type\"}],staticClass:\"form-control\",attrs:{\"id\":\"type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.connectionForm, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l(([ { name: 'Pass', id: 'pass' }, { name: 'Reject', id: 'reject' } ]),function(item){return _c('option',{key:'connection-type-' + item.id,domProps:{\"value\":item.id}},[_vm._v(\"\\n                    \"+_vm._s(item.name)+\"\\n                \")])}),0)]),_c('div',{staticClass:\"footer\"},[_c('button',{on:{\"click\":_vm.handleClickCancelSaveConnection}},[_vm._v(\"Cancel\")]),_c('button',{on:{\"click\":_vm.handleClickSaveConnection}},[_vm._v(\"Ok\")])])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header\"},[_c('span',[_vm._v(\"Edit\")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 320px\">\n            <div class=\"header\">\n                <span>Edit</span>\n            </div>\n            <div class=\"body\">\n                <label for=\"name\">Name</label>\n                <input id=\"name\" class=\"form-control\" v-model=\"connectionForm.name\"/>\n                <label for=\"type\">Type</label>\n                <select id=\"type\" class=\"form-control\" v-model=\"connectionForm.type\">\n                    <option :key=\"'connection-type-' + item.id\"\n                            v-for=\"item in [ { name: 'Pass', id: 'pass' }, { name: 'Reject', id: 'reject' } ]\"\n                            :value=\"item.id\">\n                        {{item.name}}\n                    </option>\n                </select>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelSaveConnection\">Cancel</button>\n                <button @click=\"handleClickSaveConnection\">Ok</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      connection: {\n        type: Object,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        connectionForm: {\n          type: null,\n          sourceId: null,\n          sourcePosition: null,\n          destinationId: null,\n          destinationPosition: null,\n          name: null,\n          expression: null,\n        },\n      };\n    },\n    methods: {\n      async handleClickSaveConnection() {\n        this.$emit('update:visible', false);\n        this.$emit('update:connection', Object.assign(this.connection, {\n          name: this.connectionForm.name,\n          type: this.connectionForm.type,\n          expression: this.connectionForm.expression,\n        }));\n      },\n      async handleClickCancelSaveConnection() {\n        this.$emit('update:visible', false);\n      },\n    },\n    watch: {\n      connection: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.connectionForm.id = val.id;\n          this.connectionForm.type = val.type;\n          this.connectionForm.name = val.name;\n          this.connectionForm.expression = val.expression;\n        },\n      },\n    },\n  };\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ConnectionDialog.vue?vue&type=template&id=46e2c904&\"\nimport script from \"./ConnectionDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./ConnectionDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.visible)?_c('div',{staticClass:\"modal\",staticStyle:{\"width\":\"320px\"}},[_vm._m(0),_c('div',{staticClass:\"body\"},[_c('label',{attrs:{\"for\":\"name\"}},[_vm._v(\"Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.nodeForm.name),expression:\"nodeForm.name\"}],staticClass:\"form-control\",attrs:{\"id\":\"name\"},domProps:{\"value\":(_vm.nodeForm.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.nodeForm, \"name\", $event.target.value)}}}),_c('label',{attrs:{\"for\":\"type\"}},[_vm._v(\"Type\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.nodeForm.type),expression:\"nodeForm.type\"}],staticClass:\"form-control\",attrs:{\"id\":\"type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.nodeForm, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l(([ { name: 'Start', id: 'start' }, { name: 'End', id: 'end' }, { name: 'Operation', id: 'operation' } ]),function(item){return _c('option',{key:'node-type-' + item.id,domProps:{\"value\":item.id}},[_vm._v(\"\\n                    \"+_vm._s(item.name)+\"\\n                \")])}),0),_c('label',{attrs:{\"for\":\"approver\"}},[_vm._v(\"Approver\")]),_c('select',{staticClass:\"form-control\",attrs:{\"id\":\"approver\"},domProps:{\"value\":_vm.nodeForm.approver.id},on:{\"change\":function($event){return _vm.handleChangeApprover($event)}}},_vm._l((_vm.approvers),function(item){return _c('option',{key:'approver-' + item.id,domProps:{\"value\":item.id}},[_vm._v(\"\\n                    \"+_vm._s(item.name)+\"\\n                \")])}),0)]),_c('div',{staticClass:\"footer\"},[_c('button',{on:{\"click\":_vm.handleClickCancelSaveNode}},[_vm._v(\"Cancel\")]),_c('button',{on:{\"click\":_vm.handleClickSaveNode}},[_vm._v(\"Ok\")])])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header\"},[_c('span',[_vm._v(\"Edit\")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 320px\">\n            <div class=\"header\">\n                <span>Edit</span>\n            </div>\n            <div class=\"body\">\n                <label for=\"name\">Name</label>\n                <input class=\"form-control\" id=\"name\" v-model=\"nodeForm.name\"/>\n                <label for=\"type\">Type</label>\n                <select class=\"form-control\" id=\"type\" v-model=\"nodeForm.type\">\n                    <option :key=\"'node-type-' + item.id\" :value=\"item.id\"\n                            v-for=\"item in [ { name: 'Start', id: 'start' }, { name: 'End', id: 'end' }, { name: 'Operation', id: 'operation' } ]\"\n                    >\n                        {{item.name}}\n                    </option>\n                </select>\n                <label for=\"approver\">Approver</label>\n                <select class=\"form-control\" id=\"approver\" :value=\"nodeForm.approver.id\"\n                        @change=\"handleChangeApprover($event)\">\n                    <option :value=\"item.id\" :key=\"'approver-' + item.id\" v-for=\"item in approvers\">\n                        {{item.name}}\n                    </option>\n                </select>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelSaveNode\">Cancel</button>\n                <button @click=\"handleClickSaveNode\">Ok</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      node: {\n        type: Object,\n        default: null,\n      },\n    },\n    data: function() {\n      return {\n        nodeForm: {name: null, id: null, type: null, approver: []},\n        approvers: [{id: 1, name: 'Joyce'}, {id: 2, name: 'Allen'}, {id: 3, name: 'Teresa'}],\n      };\n    },\n    methods: {\n      handleClickSaveNode() {\n        this.$emit('update:node', Object.assign(this.node, {\n          name: this.nodeForm.name,\n          type: this.nodeForm.type,\n          approvers: [Object.assign({}, this.nodeForm.approver)],\n        }));\n        this.$emit('update:visible', false);\n      },\n      handleClickCancelSaveNode() {\n        this.$emit('update:visible', false);\n      },\n      handleChangeApprover(e) {\n        this.nodeForm.approver = this.approvers.filter(i => i.id === parseInt(e.target.value))[0];\n      },\n    },\n    watch: {\n      node: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.nodeForm.id = val.id;\n          this.nodeForm.name = val.name;\n          this.nodeForm.type = val.type;\n          if (val.approvers && val.approvers.length > 0) {\n            this.nodeForm.approver = val.approvers[0];\n          }\n        },\n      },\n    },\n  };\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NodeDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NodeDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NodeDialog.vue?vue&type=template&id=31bc5405&\"\nimport script from \"./NodeDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./NodeDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({\n    width: isNaN(_vm.width) ? _vm.width : _vm.width + 'px',\n    height: isNaN(_vm.height) ? _vm.height : _vm.height + 'px',\n    cursor: _vm.cursor,\n  }),attrs:{\"id\":\"chart\",\"tabindex\":\"0\"},on:{\"mousemove\":_vm.handleChartMouseMove,\"mouseup\":_vm.handleChartMouseUp,\"dblclick\":function($event){return _vm.handleChartDblClick($event)},\"mousewheel\":_vm.handleChartMouseWheel,\"mousedown\":function($event){return _vm.handleChartMouseDown($event)}}},[_c('span',{staticClass:\"unselectable\",attrs:{\"id\":\"position\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.cursorToChartOffset.x + \", \" + _vm.cursorToChartOffset.y)+\"\\n  \")]),_c('svg',{attrs:{\"id\":\"svg\"}},[_c('rect',{staticClass:\"selection\",attrs:{\"height\":\"0\",\"width\":\"0\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function distanceOfPointToLine(beginX, beginY, endX, endY, ptX, ptY) {\n  const k = (endY - beginY || 1) / (endX - beginX || 1);\n  const b = beginY - k * beginX;\n  return Math.abs(k * ptX - ptY + b) / Math.sqrt(k * k + 1);\n}\n\nfunction between(num1, num2, num) {\n  return (num > num1 && num < num2) || (num > num2 && num < num1);\n}\n\nfunction approximatelyEquals(n, m) {\n  return Math.abs(m - n) <= 3;\n}\n\nfunction getEdgeOfPoints(points) {\n  let minX = points.reduce((prev, point) => {\n    return point.x < prev ? point.x : prev;\n  }, Infinity);\n  let maxX = points.reduce((prev, point) => {\n    return point.x > prev ? point.x : prev;\n  }, 0);\n  let minY = points.reduce((prev, point) => {\n    return point.y < prev ? point.y : prev;\n  }, Infinity);\n  let maxY = points.reduce((prev, point) => {\n    return point.y > prev ? point.y : prev;\n  }, 0);\n  return {start: {x: minX, y: minY}, end: {x: maxX, y: maxY}};\n}\n\nfunction pointRectangleIntersection(p, r) {\n  return p.x > r.start.x && p.x < r.end.x && p.y > r.start.y && p.y < r.end.y;\n}\n\nfunction roundTo20(number) {\n  return number < 20 ? 20 : number;\n}\n\nexport {\n  distanceOfPointToLine,\n  between,\n  approximatelyEquals,\n  getEdgeOfPoints,\n  pointRectangleIntersection,\n  roundTo20,\n};\n","import * as d3 from 'd3';\nimport {approximatelyEquals} from './math';\n\nfunction lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle, dash) {\n  let sta = [x1, y1];\n  let end = [x2, y2];\n  let lineGenerator = d3.line().x(d => d[0]).y(d => d[1]);\n  let path = g.append('path').\n      attr('stroke', strokeStyle).\n      attr('stroke-width', lineWidth).\n      attr('fill', 'none').\n      attr('d', lineGenerator([sta, end]));\n  if (dash) {\n    path.style('stroke-dasharray', dash.join(','));\n  }\n  return path;\n}\n\nfunction line2(g, x1, y1, x2, y2, startPosition, endPosition, lineWidth,\n    strokeStyle, markered) {\n  if (!endPosition) {\n    endPosition = x1 > x2 ? 'right' : 'left';\n  }\n  \n  let points = [];\n  let start = [x1, y1];\n  let end = [x2, y2];\n  let centerX = start[0] + (end[0] - start[0]) / 2;\n  let centerY = start[1] + (end[1] - start[1]) / 2;\n  let second;\n  let addVerticalCenterLine = function() {\n    let third = [centerX, second[1]];\n    let forth = [centerX, penult[1]];\n    points.push(third);\n    points.push(forth);\n  };\n  let addHorizontalCenterLine = function() {\n    let third = [second[0], centerY];\n    let forth = [penult[0], centerY];\n    points.push(third);\n    points.push(forth);\n  };\n  let addHorizontalTopLine = function() {\n    points.push([second[0], start[1] - 50]);\n    points.push([penult[0], start[1] - 50]);\n  };\n  let addHorizontalBottomLine = function() {\n    points.push([second[0], start[1] + 50]);\n    points.push([penult[0], start[1] + 50]);\n  };\n  let addVerticalRightLine = function() {\n    points.push([start[0] + 80, second[1]]);\n    points.push([start[0] + 80, penult[1]]);\n  };\n  let addVerticalLeftLine = function() {\n    points.push([start[0] - 80, second[1]]);\n    points.push([start[0] - 80, penult[1]]);\n  };\n  let addSecondXPenultY = function() {\n    points.push([second[0], penult[1]]);\n  };\n  let addPenultXSecondY = function() {\n    points.push([penult[0], second[1]]);\n  };\n  switch (startPosition) {\n    case 'left':\n      second = [start[0] - 20, start[1]];\n      break;\n    case 'top':\n      second = [start[0], start[1] - 20];\n      break;\n    case 'bottom':\n      second = [start[0], start[1] + 20];\n      break;\n    default:\n      second = [start[0] + 20, start[1]];\n      break;\n  }\n  let penult = null;\n  switch (endPosition) {\n    case 'right':\n      penult = [end[0] + 20, end[1]];\n      break;\n    case 'top':\n      penult = [end[0], end[1] - 20];\n      break;\n    case 'bottom':\n      penult = [end[0], end[1] + 20];\n      break;\n    default:\n      penult = [end[0] - 20, end[1]];\n      break;\n  }\n  points.push(start);\n  points.push(second);\n  startPosition = startPosition || 'right';\n  endPosition = endPosition || 'left';\n  let direction = getDirection(x1, y1, x2, y2);\n  if (direction.indexOf('r') > -1) {\n    if (startPosition === 'right' || endPosition === 'left') {\n      if (second[0] > centerX) {\n        second[0] = centerX;\n      }\n      if (penult[0] < centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n  if (direction.indexOf('d') > -1) {\n    if (startPosition === 'bottom' || endPosition === 'top') {\n      if (second[1] > centerY) {\n        second[1] = centerY;\n      }\n      if (penult[1] < centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n  if (direction.indexOf('l') > -1) {\n    if (startPosition === 'left' || endPosition === 'right') {\n      if (second[0] < centerX) {\n        second[0] = centerX;\n      }\n      if (penult[0] > centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n  if (direction.indexOf('u') > -1) {\n    if (startPosition === 'top' || endPosition === 'bottom') {\n      if (second[1] < centerY) {\n        second[1] = centerY;\n      }\n      if (penult[1] > centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n  switch (direction) {\n    case 'lu': {\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'top':\n            addVerticalCenterLine();\n            break;\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // startPosition is left\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addVerticalCenterLine();\n            break;\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      }\n      break;\n    }\n    case 'u':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'right': {\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'right': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'top':\n            addVerticalRightLine();\n            break;\n          default: {\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            break;\n          default: {\n            points.push([second[0], penult[1]]);\n            break;\n          }\n        }\n      }\n      break;\n    case 'ru':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addVerticalCenterLine();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'right': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'l':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n          default: {\n            addHorizontalBottomLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalBottomLine();\n            break;\n          }\n          case 'right': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'right': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'right': {\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      }\n      break;\n    case 'r':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            break;\n          }\n          case 'right': {\n            addHorizontalTopLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'right': {\n            addHorizontalBottomLine();\n            break;\n          }\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'right': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n          default: {\n            addHorizontalBottomLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'ld':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'top': {\n            addHorizontalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addPenultXSecondY();\n            break;\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addPenultXSecondY();\n            break;\n          case 'right': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      }\n      break;\n    case 'd':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'right': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addVerticalLeftLine();\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left': {\n            break;\n          }\n          case 'right': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addVerticalLeftLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'rd': {\n      if (startPosition === 'right' && endPosition === 'left') {\n        addVerticalCenterLine();\n      } else if (startPosition === 'right' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      } else if (\n          (startPosition === 'right' && endPosition === 'top') ||\n          (startPosition === 'right' && endPosition === 'right')\n      ) {\n        addPenultXSecondY();\n      } else if (startPosition === 'bottom' && endPosition === 'left') {\n        addSecondXPenultY();\n      } else if (startPosition === 'bottom' && endPosition === 'right') {\n        addPenultXSecondY();\n      } else if (startPosition === 'bottom' && endPosition === 'top') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'bottom' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      } else if (startPosition === 'top' && endPosition === 'left') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'right') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'top') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'bottom') {\n        addVerticalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'left') {\n        addSecondXPenultY();\n      } else if (startPosition === 'left' && endPosition === 'right') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'top') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      }\n      break;\n    }\n  }\n  points.push(penult);\n  points.push(end);\n\n  let lines = [];\n  let paths = [];\n  for (let i = 0; i < points.length; i++) {\n    let source = points[i];\n    let destination = points[i + 1];\n    lines.push({\n      sourceX: source[0],\n      sourceY: source[1],\n      destinationX: destination[0],\n      destinationY: destination[1],\n    });\n    let finish = i === points.length - 2;\n    if (finish && markered) {\n      let path = arrowTo(g, source[0], source[1], destination[0],\n          destination[1], lineWidth, strokeStyle);\n      paths.push(path);\n      break;\n    } else {\n      let path = lineTo(g, source[0], source[1], destination[0], destination[1],\n          lineWidth, strokeStyle);\n      paths.push(path);\n    }\n    if (finish) {\n      break;\n    }\n  }\n  return {lines, paths};\n}\n\nfunction arrowTo(g, x1, y1, x2, y2, lineWidth, strokeStyle) {\n  let path = lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle);\n  const id = 'arrow' + strokeStyle.replace('#', '');\n  g.append('marker').\n      attr('id', id).\n      attr('markerUnits', 'strokeWidth').\n      attr('viewBox', '0 0 12 12').\n      attr('refX', 9).\n      attr('refY', 6).\n      attr('markerWidth', 12).\n      attr('markerHeight', 12).\n      attr('orient', 'auto').\n      append('path').\n      attr('d', 'M2,2 L10,6 L2,10 L6,6 L2,2').\n      attr('fill', strokeStyle);\n  path.attr('marker-end', 'url(#' + id + ')');\n  return path;\n}\n\nfunction getDirection(x1, y1, x2, y2) {\n  // Use approximatelyEquals to fix the problem of css position presicion\n  if (x2 < x1 && approximatelyEquals(y2, y1)) {\n    return 'l';\n  }\n  if (x2 > x1 && approximatelyEquals(y2, y1)) {\n    return 'r';\n  }\n  if (approximatelyEquals(x2, x1) && y2 < y1) {\n    return 'u';\n  }\n  if (approximatelyEquals(x2, x1) && y2 > y1) {\n    return 'd';\n  }\n  if (x2 < x1 && y2 < y1) {\n    return 'lu';\n  }\n  if (x2 > x1 && y2 < y1) {\n    return 'ru';\n  }\n  if (x2 < x1 && y2 > y1) {\n    return 'ld';\n  }\n  return 'rd';\n}\n\nexport {\n  arrowTo,\n  lineTo,\n  getDirection,\n  line2,\n};\n","import * as d3 from 'd3';\nimport {roundTo20} from '../../utils/math';\n\nfunction render(g, node, isSelected) {\n  node.width = node.width || 120;\n  node.height = node.height || 60;\n  let borderColor = isSelected ? '#666666' : '#bbbbbb';\n  if (node.type !== 'start' && node.type !== 'end') {\n    // title\n    g.append('rect').\n        attr('x', node.x).\n        attr('y', node.y).\n        attr('stroke', borderColor).\n        attr('class', 'title').\n        style('height', '20px').\n        style('fill', '#f1f3f4').\n        style('stroke-width', '1px').\n        style('width', node.width + 'px');\n    g.append('text').\n        attr('x', node.x + 4).\n        attr('y', node.y + 15).\n        attr('class', 'unselectable').\n        text(() => node.name).\n        each(function wrap() {\n          let self = d3.select(this),\n              textLength = self.node().getComputedTextLength(),\n              text = self.text();\n          while (textLength > (node.width - 2 * 4) && text.length > 0) {\n            text = text.slice(0, -1);\n            self.text(text + '...');\n            textLength = self.node().getComputedTextLength();\n          }\n        });\n  }\n  // body\n  let body = g.append('rect').attr('class', 'body');\n  body.style('width', node.width + 'px').\n      style('fill', 'white').\n      style('stroke-width', '1px');\n  if (node.type !== 'start' && node.type !== 'end') {\n    body.attr('x', node.x).attr('y', node.y + 20);\n    body.style('height', roundTo20(node.height - 20) + 'px');\n  } else {\n    body.attr('x', node.x).\n        attr('y', node.y).\n        classed(node.type, true).\n        attr('rx', 30);\n    body.style('height', roundTo20(node.height) + 'px');\n  }\n  body.attr('stroke', borderColor);\n\n  // body text\n  let text = node.type === 'start'\n      ? 'Start'\n      : (node.type === 'end' ? 'End' : (\n              (!node.approvers || node.approvers.length === 0)\n                  ? 'No approver'\n                  : (\n                      node.approvers.length > 1\n                          ? `${node.approvers[0].name + '...'}`\n                          : node.approvers[0].name\n                  )\n          )\n      );\n  let bodyTextY;\n  if (node.type !== 'start' && node.type !== 'end') {\n    bodyTextY = node.y + 25 + roundTo20(node.height - 20) / 2;\n  } else {\n    bodyTextY = node.y + 5 + roundTo20(node.height) / 2;\n  }\n  g.append('text').\n      attr('x', node.x + node.width / 2).\n      attr('y', bodyTextY).\n      attr('class', 'unselectable').\n      attr('text-anchor', 'middle').\n      text(function() {return text;}).each(function wrap() {\n    let self = d3.select(this),\n        textLength = self.node().getComputedTextLength(),\n        text = self.text();\n    while (textLength > (node.width - 2 * 4) && text.length > 0) {\n      text = text.slice(0, -1);\n      self.text(text + '...');\n      textLength = self.node().getComputedTextLength();\n    }\n  });\n}\n\nexport default render;","<template>\n  <div\n    id=\"chart\"\n    tabindex=\"0\"\n    :style=\"{\n      width: isNaN(width) ? width : width + 'px',\n      height: isNaN(height) ? height : height + 'px',\n      cursor: cursor,\n    }\"\n    @mousemove=\"handleChartMouseMove\"\n    @mouseup=\"handleChartMouseUp\"\n    @dblclick=\"handleChartDblClick($event)\"\n    @mousewheel=\"handleChartMouseWheel\"\n    @mousedown=\"handleChartMouseDown($event)\"\n  >\n    <span id=\"position\" class=\"unselectable\">\n      {{ cursorToChartOffset.x + \", \" + cursorToChartOffset.y }}\n    </span>\n    <svg id=\"svg\">\n      <rect class=\"selection\" height=\"0\" width=\"0\"></rect>\n    </svg>\n  </div>\n</template>\n<style src=\"./index.css\"></style>\n<script>\nimport { line2, lineTo } from \"../../utils/svg\";\nimport * as d3 from \"d3\";\nimport {\n  between,\n  distanceOfPointToLine,\n  getEdgeOfPoints,\n  pointRectangleIntersection,\n} from \"../../utils/math\";\nimport render from \"./render\";\n\nexport default {\n  name: \"flowchart\",\n  props: {\n    nodes: {\n      type: Array,\n      default: () => [\n        { id: 1, x: 140, y: 270, name: \"Start\", type: \"start\" },\n        { id: 2, x: 540, y: 270, name: \"End\", type: \"end\" },\n      ],\n    },\n    connections: {\n      type: Array,\n      default: () => [\n        {\n          source: { id: 1, position: \"right\" },\n          destination: { id: 2, position: \"left\" },\n          id: 1,\n          type: \"pass\",\n        },\n      ],\n    },\n    width: {\n      type: [String, Number],\n      default: 800,\n    },\n    height: {\n      type: [String, Number],\n      default: 600,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    render: {\n      type: Function,\n      default: render,\n    },\n  },\n  data() {\n    return {\n      internalNodes: [],\n      internalConnections: [],\n      connectingInfo: {\n        source: null,\n        sourcePosition: null,\n      },\n      selectionInfo: null,\n      currentNodes: [],\n      currentConnections: [],\n      /**\n       * Mouse position(relative to chart div)\n       */\n      cursorToChartOffset: { x: 0, y: 0 },\n      clickedOnce: false,\n      pathClickedOnce: false,\n      /**\n       * lines of all internalConnections\n       */\n      lines: [],\n    };\n  },\n  methods: {\n    add(node) {\n      if (this.readonly) {\n        return;\n      }\n      this.internalNodes.push(node);\n      this.$emit(\"add\", node, this.internalNodes, this.internalConnections);\n    },\n    editCurrent() {\n      if (this.currentNodes.length === 1) {\n        this.editNode(this.currentNodes[0]);\n      } else if (this.currentConnections.length === 1) {\n        this.editConnection(this.currentConnections[0]);\n      }\n    },\n    editNode(node) {\n      if (this.readonly) {\n        return;\n      }\n      this.$emit(\"editnode\", node);\n    },\n    editConnection(connection) {\n      if (this.readonly) {\n        return;\n      }\n      this.$emit(\"editconnection\", connection);\n    },\n    handleChartMouseWheel(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (event.ctrlKey) {\n        let svg = document.getElementById(\"svg\");\n        let zoom = parseFloat(svg.style.zoom || 1);\n        if (event.deltaY > 0 && zoom === 0.1) {\n          return;\n        }\n        zoom -= event.deltaY / 100 / 10;\n        svg.style.zoom = zoom;\n      }\n    },\n    async handleChartMouseUp() {\n      if (this.connectingInfo.source) {\n        if (this.hoveredConnector) {\n          if (this.connectingInfo.source.id !== this.hoveredConnector.node.id) {\n            // Node can't connect to itself\n            let tempId = +new Date();\n            let conn = {\n              source: {\n                id: this.connectingInfo.source.id,\n                position: this.connectingInfo.sourcePosition,\n              },\n              destination: {\n                id: this.hoveredConnector.node.id,\n                position: this.hoveredConnector.position,\n              },\n              id: tempId,\n              type: \"pass\",\n              name: \"Pass\",\n            };\n            this.internalConnections.push(conn);\n            this.$emit(\"connect\", conn, this.internalNodes, this.internalConnections);\n          }\n        }\n        this.connectingInfo.source = null;\n        this.connectingInfo.sourcePosition = null;\n      }\n      if (this.selectionInfo) {\n        this.selectionInfo = null;\n      }\n    },\n    async handleChartMouseMove(event) {\n      // calc offset of cursor to chart\n      let boundingClientRect = event.currentTarget.getBoundingClientRect();\n      let actualX = event.pageX - boundingClientRect.left - window.scrollX;\n      this.cursorToChartOffset.x = Math.trunc(actualX);\n      let actualY = event.pageY - boundingClientRect.top - window.scrollY;\n      this.cursorToChartOffset.y = Math.trunc(actualY);\n\n      if (this.connectingInfo.source) {\n        await this.renderConnections();\n\n        d3.selectAll(\"#svg .connector\").classed(\"active\", true);\n\n        let sourceOffset = this.getNodeConnectorOffset(\n          this.connectingInfo.source.id,\n          this.connectingInfo.sourcePosition\n        );\n        let destinationPosition = this.hoveredConnector\n          ? this.hoveredConnector.position\n          : null;\n        this.arrowTo(\n          sourceOffset.x,\n          sourceOffset.y,\n          this.cursorToChartOffset.x,\n          this.cursorToChartOffset.y,\n          this.connectingInfo.sourcePosition,\n          destinationPosition\n        );\n      }\n    },\n    handleChartDblClick(event) {\n      if (this.readonly) {\n        return;\n      }\n      this.$emit(\"dblclick\", { x: event.offsetX, y: event.offsetY });\n    },\n    handleChartMouseDown(event) {\n      if (event.ctrlKey) {\n        return;\n      }\n      this.selectionInfo = { x: event.offsetX, y: event.offsetY };\n    },\n    getConnectorPosition(node) {\n      const halfWidth = node.width / 2;\n      const halfHeight = node.height / 2;\n      let top = { x: node.x + halfWidth, y: node.y };\n      let left = { x: node.x, y: node.y + halfHeight };\n      let bottom = { x: node.x + halfWidth, y: node.y + node.height };\n      let right = { x: node.x + node.width, y: node.y + halfHeight };\n      return { left, right, top, bottom };\n    },\n    renderSelection() {\n      let that = this;\n      // render selection rectangle\n      if (that.selectionInfo) {\n        that.currentNodes.splice(0, that.currentNodes.length);\n        that.currentConnections.splice(0, that.currentConnections.length);\n        let edge = getEdgeOfPoints([\n          { x: that.selectionInfo.x, y: that.selectionInfo.y },\n          { x: that.cursorToChartOffset.x, y: that.cursorToChartOffset.y },\n        ]);\n        let svg = d3.select(\"#svg\");\n        let rect = svg.select(\".selection\").classed(\"active\", true);\n        rect\n          .attr(\"x\", edge.start.x)\n          .attr(\"y\", edge.start.y)\n          .attr(\"width\", edge.end.x - edge.start.x)\n          .attr(\"height\", edge.end.y - edge.start.y);\n\n        that.internalNodes.forEach((item) => {\n          let points = [\n            { x: item.x, y: item.y },\n            { x: item.x, y: item.y + item.height },\n            { x: item.x + item.width, y: item.y },\n            { x: item.x + item.width, y: item.y + item.height },\n          ];\n          if (\n            points.every((point) => pointRectangleIntersection(point, edge))\n          ) {\n            that.currentNodes.push(item);\n          }\n        });\n        that.lines.forEach((line) => {\n          let points = [\n            { x: line.sourceX, y: line.sourceY },\n            { x: line.destinationX, y: line.destinationY },\n          ];\n          if (\n            points.every((point) => pointRectangleIntersection(point, edge)) &&\n            that.currentConnections.every((item) => item.id !== line.id)\n          ) {\n            let connection = that.internalConnections.filter(\n              (conn) => conn.id === line.id\n            )[0];\n            that.currentConnections.push(connection);\n          }\n        });\n      } else {\n        d3.selectAll(\"#svg > .selection\").classed(\"active\", false);\n      }\n    },\n    renderConnections() {\n      let that = this;\n      return new Promise(function (resolve) {\n        that.$nextTick(function () {\n          d3.selectAll(\"#svg > g.connection\").remove();\n          // render lines\n          that.lines = [];\n          that.internalConnections.forEach((conn) => {\n            let sourcePosition = that.getNodeConnectorOffset(\n              conn.source.id,\n              conn.source.position\n            );\n            let destinationPosition = that.getNodeConnectorOffset(\n              conn.destination.id,\n              conn.destination.position\n            );\n            let colors = {\n              pass: \"#52c41a\",\n              reject: \"red\",\n            };\n            if (\n              that.currentConnections.filter((item) => item === conn).length > 0\n            ) {\n              colors = {\n                pass: \"#12640a\",\n                reject: \"darkred\",\n              };\n            }\n            let result = that.arrowTo(\n              sourcePosition.x,\n              sourcePosition.y,\n              destinationPosition.x,\n              destinationPosition.y,\n              conn.source.position,\n              conn.destination.position,\n              colors[conn.type]\n            );\n            for (const path of result.paths) {\n              path.on(\"mousedown\", function () {\n                d3.event.stopPropagation();\n                if (that.pathClickedOnce) {\n                  that.editConnection(conn);\n                } else {\n                  let timer = setTimeout(function () {\n                    that.pathClickedOnce = false;\n                    clearTimeout(timer);\n                  }, 300);\n                  that.pathClickedOnce = true;\n                }\n                that.currentNodes.splice(0, that.currentNodes.length);\n                that.currentConnections.splice(\n                  0,\n                  that.currentConnections.length\n                );\n                that.currentConnections.push(conn);\n              });\n            }\n            for (const line of result.lines) {\n              that.lines.push({\n                sourceX: line.sourceX,\n                sourceY: line.sourceY,\n                destinationX: line.destinationX,\n                destinationY: line.destinationY,\n                id: conn.id,\n              });\n            }\n          });\n          resolve();\n        });\n      });\n    },\n    renderNodes() {\n      let that = this;\n      return new Promise(function (resolve) {\n        d3.selectAll(\"#svg > g.node\").remove();\n\n        // render nodes\n        that.internalNodes.forEach((node) => {\n          that.renderNode(\n            node,\n            that.currentNodes.filter((item) => item === node).length > 0\n          );\n        });\n\n        resolve();\n      });\n    },\n    getNodeConnectorOffset(nodeId, connectorPosition) {\n      let node = this.internalNodes.filter((item) => item.id === nodeId)[0];\n      return this.getConnectorPosition(node)[connectorPosition];\n    },\n    append(element) {\n      let svg = d3.select(\"#svg\");\n      return svg.insert(element, \".selection\");\n    },\n    guideLineTo(x1, y1, x2, y2) {\n      let g = this.append(\"g\");\n      g.classed(\"guideline\", true);\n      lineTo(g, x1, y1, x2, y2, 1, \"#a3a3a3\", [5, 3]);\n    },\n    arrowTo(x1, y1, x2, y2, startPosition, endPosition, color) {\n      let g = this.append(\"g\");\n      g.classed(\"connection\", true);\n      line2(\n        g,\n        x1,\n        y1,\n        x2,\n        y2,\n        startPosition,\n        endPosition,\n        1,\n        color || \"#a3a3a3\",\n        true\n      );\n      // a 5px cover to make mouse operation conveniently\n      return line2(\n        g,\n        x1,\n        y1,\n        x2,\n        y2,\n        startPosition,\n        endPosition,\n        5,\n        \"transparent\",\n        false\n      );\n    },\n    renderNode(node, isSelected) {\n      let that = this;\n      let g = that.append(\"g\").attr(\"cursor\", \"move\").classed(\"node\", true);\n\n      node.render = that.render;\n      node.render(g, node, isSelected);\n\n      let drag = d3\n        .drag()\n        .on(\"start\", function () {\n          // handle mousedown\n          let isNotCurrentNode =\n            that.currentNodes.filter((item) => item === node).length === 0;\n          if (isNotCurrentNode) {\n            that.currentConnections.splice(0, that.currentConnections.length);\n            that.currentNodes.splice(0, that.currentNodes.length);\n            that.currentNodes.push(node);\n          }\n\n          if (that.clickedOnce) {\n            that.currentNodes.splice(0, that.currentNodes.length);\n            that.editNode(node);\n          } else {\n            let timer = setTimeout(function () {\n              that.clickedOnce = false;\n              clearTimeout(timer);\n            }, 300);\n            that.clickedOnce = true;\n          }\n        })\n        .on(\"drag\", async function () {\n          if (that.readonly) {\n            return;\n          }\n\n          let zoom = parseFloat(document.getElementById(\"svg\").style.zoom || 1);\n          for (let currentNode of that.currentNodes) {\n            let x = d3.event.dx / zoom;\n            if (currentNode.x + x < 0) {\n              x = -currentNode.x;\n            }\n            currentNode.x += x;\n            let y = d3.event.dy / zoom;\n            if (currentNode.y + y < 0) {\n              y = -currentNode.y;\n            }\n            currentNode.y += y;\n          }\n\n          d3.selectAll(\"#svg > g.guideline\").remove();\n          let edge = that.getCurrentNodesEdge();\n          let expectX = Math.round(Math.round(edge.start.x) / 10) * 10;\n          let expectY = Math.round(Math.round(edge.start.y) / 10) * 10;\n          that.internalNodes.forEach((item) => {\n            if (\n              that.currentNodes.filter((currentNode) => currentNode === item)\n                .length === 0\n            ) {\n              if (item.x === expectX) {\n                // vertical guideline\n                if (item.y < expectY) {\n                  that.guideLineTo(\n                    item.x,\n                    item.y + item.height,\n                    expectX,\n                    expectY\n                  );\n                } else {\n                  that.guideLineTo(\n                    expectX,\n                    expectY + item.height,\n                    item.x,\n                    item.y\n                  );\n                }\n              }\n              if (item.y === expectY) {\n                // horizontal guideline\n                if (item.x < expectX) {\n                  that.guideLineTo(\n                    item.x + item.width,\n                    item.y,\n                    expectX,\n                    expectY\n                  );\n                } else {\n                  that.guideLineTo(\n                    expectX + item.width,\n                    expectY,\n                    item.x,\n                    item.y\n                  );\n                }\n              }\n            }\n          });\n        })\n        .on(\"end\", function () {\n          d3.selectAll(\"#svg > g.guideline\").remove();\n          for (let currentNode of that.currentNodes) {\n            currentNode.x = Math.round(Math.round(currentNode.x) / 10) * 10;\n            currentNode.y = Math.round(Math.round(currentNode.y) / 10) * 10;\n          }\n        });\n      g.call(drag);\n      g.on(\"mousedown\", function () {\n        // handle ctrl+mousedown\n        if (!d3.event.ctrlKey) {\n          return;\n        }\n        let isNotCurrentNode =\n          that.currentNodes.filter((item) => item === node).length === 0;\n        if (isNotCurrentNode) {\n          that.currentNodes.push(node);\n        } else {\n          that.currentNodes.splice(that.currentNodes.indexOf(node), 1);\n        }\n      });\n\n      let connectors = [];\n      let connectorPosition = this.getConnectorPosition(node);\n      for (let position in connectorPosition) {\n        let positionElement = connectorPosition[position];\n        let connector = g\n          .append(\"circle\")\n          .attr(\"cx\", positionElement.x)\n          .attr(\"cy\", positionElement.y)\n          .attr(\"r\", 4)\n          .attr(\"class\", \"connector\");\n        connector\n          .on(\"mousedown\", function () {\n            d3.event.stopPropagation();\n            if (node.type === \"end\" || that.readonly) {\n              return;\n            }\n            that.connectingInfo.source = node;\n            that.connectingInfo.sourcePosition = position;\n          })\n          .on(\"mouseup\", function () {\n            d3.event.stopPropagation();\n            if (that.connectingInfo.source) {\n              if (that.connectingInfo.source.id !== node.id) {\n                // Node can't connect to itself\n                let tempId = +new Date();\n                let conn = {\n                  source: {\n                    id: that.connectingInfo.source.id,\n                    position: that.connectingInfo.sourcePosition,\n                  },\n                  destination: {\n                    id: node.id,\n                    position: position,\n                  },\n                  id: tempId,\n                  type: \"pass\",\n                  name: \"Pass\",\n                };\n                that.internalConnections.push(conn);\n                that.$emit(\"connect\", conn, that.internalNodes, that.internalConnections);\n              }\n              that.connectingInfo.source = null;\n              that.connectingInfo.sourcePosition = null;\n            }\n          })\n          .on(\"mouseover\", function () {\n            connector.classed(\"active\", true);\n          })\n          .on(\"mouseout\", function () {\n            connector.classed(\"active\", false);\n          });\n        connectors.push(connector);\n      }\n      g.on(\"mouseover\", function () {\n        connectors.forEach((conn) => conn.classed(\"active\", true));\n      }).on(\"mouseout\", function () {\n        connectors.forEach((conn) => conn.classed(\"active\", false));\n      });\n    },\n    getCurrentNodesEdge() {\n      let points = this.currentNodes.map((node) => ({\n        x: node.x,\n        y: node.y,\n      }));\n      points.push(\n        ...this.currentNodes.map((node) => ({\n          x: node.x + node.width,\n          y: node.y + node.height,\n        }))\n      );\n      return getEdgeOfPoints(points);\n    },\n    save() {\n      if (this.readonly) {\n        return;\n      }\n      this.$emit(\"save\", this.internalNodes, this.internalConnections);\n    },\n    async remove() {\n      if (this.readonly) {\n        return;\n      }\n      if (this.currentConnections.length > 0) {\n        for (let conn of this.currentConnections) {\n          this.removeConnection(conn);\n        }\n        this.currentConnections.splice(0, this.currentConnections.length);\n      }\n      if (this.currentNodes.length > 0) {\n        for (let node of this.currentNodes) {\n          this.removeNode(node);\n        }\n        this.currentNodes.splice(0, this.currentNodes.length);\n      }\n    },\n    removeNode(node) {\n      let connections = this.internalConnections.filter(\n        (item) => item.source.id === node.id || item.destination.id === node.id\n      );\n      for (let connection of connections) {\n        this.internalConnections.splice(\n          this.internalConnections.indexOf(connection),\n          1\n        );\n      }\n      this.internalNodes.splice(this.internalNodes.indexOf(node), 1);\n      this.$emit(\"delete\", node, this.internalNodes, this.internalConnections);\n    },\n    removeConnection(conn) {\n      let index = this.internalConnections.indexOf(conn);\n      this.internalConnections.splice(index, 1);\n      this.$emit(\"disconnect\", conn, this.internalNodes, this.internalConnections);\n    },\n    moveCurrentNode(x, y) {\n      if (this.currentNodes.length > 0 && !this.readonly) {\n        for (let node of this.currentNodes) {\n          if (node.x + x < 0) {\n            x = -node.x;\n          }\n          node.x += x;\n          if (node.y + y < 0) {\n            y = -node.y;\n          }\n          node.y += y;\n        }\n      }\n    },\n    init() {\n      let that = this;\n      that.internalNodes.splice(0, that.internalNodes.length);\n      that.internalConnections.splice(0, that.internalConnections.length);\n      that.nodes.forEach((node) => {\n        let newNode = Object.assign({}, node);\n        newNode.width = newNode.width || 120;\n        newNode.height = newNode.height || 60;\n        that.internalNodes.push(newNode);\n      });\n      that.connections.forEach((connection) => {\n        that.internalConnections.push(JSON.parse(JSON.stringify(connection)));\n      });\n    },\n  },\n  mounted() {\n    let that = this;\n    that.init();\n    document.onkeydown = function (event) {\n      switch (event.keyCode) {\n        case 37:\n          that.moveCurrentNode(-10, 0);\n          break;\n        case 38:\n          that.moveCurrentNode(0, -10);\n          break;\n        case 39:\n          that.moveCurrentNode(10, 0);\n          break;\n        case 40:\n          that.moveCurrentNode(0, 10);\n          break;\n        case 27:\n          that.currentNodes.splice(0, that.currentNodes.length);\n          that.currentConnections.splice(0, that.currentConnections.length);\n          break;\n        case 65:\n          if (document.activeElement === document.getElementById(\"chart\")) {\n            that.currentNodes.splice(0, that.currentNodes.length);\n            that.currentConnections.splice(0, that.currentConnections.length);\n            that.currentNodes.push(...that.internalNodes);\n            that.currentConnections.push(...that.internalConnections);\n            event.preventDefault();\n          }\n          break;\n        case 46:\n          that.remove();\n          break;\n        default:\n          break;\n      }\n    };\n  },\n  created() {},\n  computed: {\n    hoveredConnector() {\n      for (const node of this.internalNodes) {\n        let connectorPosition = this.getConnectorPosition(node);\n        for (let prop in connectorPosition) {\n          let entry = connectorPosition[prop];\n          if (\n            Math.hypot(\n              entry.x - this.cursorToChartOffset.x,\n              entry.y - this.cursorToChartOffset.y\n            ) < 10\n          ) {\n            return { position: prop, node: node };\n          }\n        }\n      }\n      return null;\n    },\n    hoveredConnection() {\n      for (const line of this.lines) {\n        let distance = distanceOfPointToLine(\n          line.sourceX,\n          line.sourceY,\n          line.destinationX,\n          line.destinationY,\n          this.cursorToChartOffset.x,\n          this.cursorToChartOffset.y\n        );\n        if (\n          distance < 5 &&\n          between(\n            line.sourceX - 2,\n            line.destinationX + 2,\n            this.cursorToChartOffset.x\n          ) &&\n          between(\n            line.sourceY - 2,\n            line.destinationY + 2,\n            this.cursorToChartOffset.y\n          )\n        ) {\n          let connections = this.internalConnections.filter(\n            (item) => item.id === line.id\n          );\n          return connections.length > 0 ? connections[0] : null;\n        }\n      }\n      return null;\n    },\n    cursor() {\n      if (this.connectingInfo.source || this.hoveredConnector) {\n        return \"crosshair\";\n      }\n      if (this.hoveredConnection != null) {\n        return \"pointer\";\n      }\n      return null;\n    },\n  },\n  watch: {\n    internalNodes: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.renderNodes();\n        this.renderConnections();\n      },\n    },\n    internalConnections: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.renderConnections();\n      },\n    },\n    selectionInfo: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.renderSelection();\n      },\n    },\n    currentNodes: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.$emit('select', this.currentNodes);\n        this.renderNodes();\n      },\n    },\n    currentConnections: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.$emit('selectconnection', this.currentConnections);\n        this.renderConnections();\n      },\n    },\n    cursorToChartOffset: {\n      immediate: true,\n      deep: true,\n      handler() {\n        if (this.selectionInfo) {\n          this.renderSelection();\n        }\n      },\n    },\n    connectingInfo: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.renderConnections();\n      },\n    },\n    nodes: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.init();\n      },\n    },\n    connections: {\n      immediate: true,\n      deep: true,\n      handler() {\n        this.init();\n      },\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Flowchart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Flowchart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Flowchart.vue?vue&type=template&id=791e6c00&\"\nimport script from \"./Flowchart.vue?vue&type=script&lang=js&\"\nexport * from \"./Flowchart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.css?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"container\">\n    <h1 class=\"title\">Flowchart Vue</h1>\n    <h5 class=\"subtitle\">\n      Flowchart & Flowchart designer component for Vue.js.\n    </h5>\n    <div id=\"toolbar\">\n      <button\n        @click=\"\n          $refs.chart.add({\n            id: +new Date(),\n            x: 10,\n            y: 10,\n            name: 'New',\n            type: 'operation',\n            approvers: [],\n          })\n        \"\n      >\n        Add(Double-click canvas)\n      </button>\n      <button @click=\"$refs.chart.remove()\">Delete(Del)</button>\n      <button @click=\"$refs.chart.editCurrent()\">\n        Edit(Double-click node)\n      </button>\n      <button @click=\"$refs.chart.save()\">Save</button>\n    </div>\n    <flowchart\n      :nodes=\"nodes\"\n      :connections=\"connections\"\n      @editnode=\"handleEditNode\"\n      :width=\"'100%'\"\n      :height=\"500\"\n      :readonly=\"false\"\n      @dblclick=\"handleDblClick\"\n      @editconnection=\"handleEditConnection\"\n      @save=\"handleChartSave\"\n      @select=\"handleSelect\"\n      @selectconnection=\"handleSelectConnection\"\n      ref=\"chart\"\n      :render=\"render\"\n    >\n    </flowchart>\n    <node-dialog\n      :visible.sync=\"nodeDialogVisible\"\n      :node.sync=\"nodeForm.target\"\n    ></node-dialog>\n    <connection-dialog\n      :visible.sync=\"connectionDialogVisible\"\n      :connection.sync=\"connectionForm.target\"\n      :operation=\"connectionForm.operation\"\n    >\n    </connection-dialog>\n  </div>\n</template>\n<script>\n/* eslint-disable no-unused-vars */\n\nimport ConnectionDialog from \"../components/ConnectionDialog\";\nimport NodeDialog from \"../components/NodeDialog\";\nimport Flowchart from \"../components/flowchart/Flowchart\";\nimport * as d3 from \"d3\";\nimport { roundTo20 } from \"../utils/math\";\n\nexport default {\n  components: {\n    ConnectionDialog,\n    NodeDialog,\n    Flowchart,\n  },\n  data: function () {\n    return {\n      nodes: [\n        { id: 1, x: 50, y: 220, name: \"Start\", type: \"start\" },\n        { id: 2, x: 630, y: 220, name: \"End\", type: \"end\" },\n        {\n          id: 3,\n          x: 340,\n          y: 130,\n          name: \"Custom size\",\n          type: \"operation\",\n          approvers: [{ id: 1, name: \"Joyce\" }],\n          width: 120,\n          height: 40,\n        },\n        {\n          id: 4,\n          x: 240,\n          y: 220,\n          name: \"Operation\",\n          type: \"operation\",\n          approvers: [{ id: 2, name: \"Allen\" }],\n        },\n        {\n          id: 5,\n          x: 440,\n          y: 220,\n          name: \"Operation\",\n          type: \"operation\",\n          approvers: [{ id: 3, name: \"Teresa\" }],\n        },\n      ],\n      connections: [\n        {\n          source: { id: 1, position: \"right\" },\n          destination: { id: 4, position: \"left\" },\n          id: 1,\n          type: \"pass\",\n        },\n        {\n          source: { id: 4, position: \"right\" },\n          destination: { id: 5, position: \"left\" },\n          id: 2,\n          type: \"pass\",\n        },\n        {\n          source: { id: 5, position: \"right\" },\n          destination: { id: 2, position: \"left\" },\n          id: 3,\n          type: \"pass\",\n        },\n        {\n          source: { id: 5, position: \"bottom\" },\n          destination: { id: 4, position: \"bottom\" },\n          id: 4,\n          type: \"reject\",\n        },\n        {\n          source: { id: 1, position: \"top\" },\n          destination: { id: 3, position: \"left\" },\n          id: 5,\n          type: \"pass\",\n        },\n        {\n          source: { id: 3, position: \"right\" },\n          destination: { id: 2, position: \"top\" },\n          id: 6,\n          type: \"pass\",\n        },\n      ],\n      nodeForm: { target: null },\n      connectionForm: { target: null, operation: null },\n      nodeDialogVisible: false,\n      connectionDialogVisible: false,\n    };\n  },\n  async mounted() {},\n  methods: {\n    handleDblClick(position) {\n      this.$refs.chart.add({\n        id: +new Date(),\n        x: position.x,\n        y: position.y,\n        name: \"New\",\n        type: \"operation\",\n        approvers: [],\n      });\n    },\n    handleSelect(nodes) {\n      // console.log(nodes);\n    },\n    handleSelectConnection(connections) {\n      // console.log(connections);\n    },\n    async handleChartSave(nodes, connections) {\n      // axios.post(url, {nodes, connection}).then(resp => {\n      //   this.nodes = resp.nodes;\n      //   this.connections = resp.connections;\n      //   // Flowchart will refresh after this.nodes and this.connections changed\n      // });\n    },\n    handleEditNode(node) {\n      this.nodeForm.target = node;\n      this.nodeDialogVisible = true;\n    },\n    handleEditConnection(connection) {\n      this.connectionForm.target = connection;\n      this.connectionDialogVisible = true;\n    },\n    render: function (g, node, isSelected) {\n      node.width = node.width || 120;\n      node.height = node.height || 60;\n      let borderColor = isSelected ? \"#666666\" : \"#bbbbbb\";\n      if (node.type !== \"start\" && node.type !== \"end\") {\n        // title\n        if (node.id !== 3) {\n          g.append(\"rect\")\n            .attr(\"x\", node.x)\n            .attr(\"y\", node.y)\n            .attr(\"stroke\", borderColor)\n            .attr(\"class\", \"title\")\n            .style(\"height\", \"20px\")\n            .style(\"fill\", \"#f1f3f4\")\n            .style(\"stroke-width\", \"1px\")\n            .style(\"width\", node.width + \"px\");\n          g.append(\"text\")\n            .attr(\"x\", node.x + 4)\n            .attr(\"y\", node.y + 15)\n            .attr(\"class\", \"unselectable\")\n            .text(() => node.name)\n            .each(function wrap() {\n              let self = d3.select(this),\n                textLength = self.node().getComputedTextLength(),\n                text = self.text();\n              while (textLength > node.width - 2 * 4 && text.length > 0) {\n                text = text.slice(0, -1);\n                self.text(text + \"...\");\n                textLength = self.node().getComputedTextLength();\n              }\n            });\n        }\n      }\n      // body\n      if (node.id === 3) {\n        let body = g.append(\"ellipse\").attr(\"class\", \"body\");\n        body.attr(\"cx\", node.x + node.width / 2);\n        body.attr(\"cy\", node.y + node.height / 2);\n        body.attr(\"rx\", node.width / 2);\n        body.attr(\"ry\", node.height / 2);\n        body.style(\"fill\", \"white\");\n        body.style(\"stroke-width\", \"1px\");\n        body.classed(node.type, true);\n        body.attr(\"stroke\", borderColor);\n      } else {\n        let body = g.append(\"rect\").attr(\"class\", \"body\");\n        body\n          .style(\"width\", node.width + \"px\")\n          .style(\"fill\", \"white\")\n          .style(\"stroke-width\", \"1px\");\n        if (node.type !== \"start\" && node.type !== \"end\") {\n          body.attr(\"x\", node.x).attr(\"y\", node.y + 20);\n          body.style(\"height\", roundTo20(node.height - 20) + \"px\");\n        } else {\n          body\n            .attr(\"x\", node.x)\n            .attr(\"y\", node.y)\n            .classed(node.type, true)\n            .attr(\"rx\", 30);\n          body.style(\"height\", roundTo20(node.height) + \"px\");\n        }\n        body.attr(\"stroke\", borderColor);\n      }\n\n      // body text\n      let text =\n        node.type === \"start\"\n          ? \"Start\"\n          : node.type === \"end\"\n          ? \"End\"\n          : !node.approvers || node.approvers.length === 0\n          ? \"No approver\"\n          : node.approvers.length > 1\n          ? `${node.approvers[0].name + \"...\"}`\n          : node.approvers[0].name;\n      let bodyTextY;\n      if (node.type !== \"start\" && node.type !== \"end\") {\n        if (node.id === 3) {\n          bodyTextY = node.y + 25;\n        } else {\n          bodyTextY = node.y + 25 + roundTo20(node.height - 20) / 2;\n        }\n      } else {\n        bodyTextY = node.y + 5 + roundTo20(node.height) / 2;\n      }\n      g.append(\"text\")\n        .attr(\"x\", node.x + node.width / 2)\n        .attr(\"y\", bodyTextY)\n        .attr(\"class\", \"unselectable\")\n        .attr(\"text-anchor\", \"middle\")\n        .text(function () {\n          return text;\n        })\n        .each(function wrap() {\n          let self = d3.select(this),\n            textLength = self.node().getComputedTextLength(),\n            text = self.text();\n          while (textLength > node.width - 2 * 4 && text.length > 0) {\n            text = text.slice(0, -1);\n            self.text(text + \"...\");\n            textLength = self.node().getComputedTextLength();\n          }\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n#toolbar {\n  margin-bottom: 10px;\n}\n\n.title {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n\n.subtitle {\n  margin-bottom: 10px;\n}\n\n#toolbar > button {\n  margin-right: 4px;\n}\n\n.container {\n  width: 800px;\n  margin: auto;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3e3835ac&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=3e3835ac&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e3835ac\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport App from './views/App';\n\nVue.config.productionTip = false;\n\nnew Vue({\n  el: '#app',\n  mounted() {},\n  components: {\n    App,\n  },\n});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-3-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-3-3!./modal.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e65d5572\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import mod from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3e3835ac&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3e3835ac&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#toolbar[data-v-3e3835ac]{margin-bottom:10px}.title[data-v-3e3835ac]{margin-top:10px;margin-bottom:0}.subtitle[data-v-3e3835ac]{margin-bottom:10px}#toolbar>button[data-v-3e3835ac]{margin-right:4px}.container[data-v-3e3835ac]{width:800px;margin:auto}\", \"\"]);\n\n// exports\n"],"sourceRoot":""}